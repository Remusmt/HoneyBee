// <auto-generated />
using System;
using HoneyBee.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HoneyBee.Infrastructure.Migrations
{
    [DbContext(typeof(HoneyBeeContext))]
    partial class HoneyBeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.BankBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("BankBranches");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Bin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AvailableForSale")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Pickable")
                        .HasColumnType("bit");

                    b.Property<bool>("Receivable")
                        .HasColumnType("bit");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Bins");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Category");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.ChartofAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BankBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<bool>("BlockDirectPosting")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CurrencyBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankBranchId");

                    b.HasIndex("BankId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ParentAccountId");

                    b.HasIndex("TaxId");

                    b.ToTable("ChartofAccounts");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.CompanyPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ChargeTax")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DefaultShippingMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultTaxId")
                        .HasColumnType("int");

                    b.Property<int?>("DefualtFOBId")
                        .HasColumnType("int");

                    b.Property<int?>("HomeCurrencyId")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TrackTime")
                        .HasColumnType("bit");

                    b.Property<bool>("UseMultipleCurrencies")
                        .HasColumnType("bit");

                    b.Property<bool>("UsePricingRules")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CompanyPreferences");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagIconUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("DecimalPlaces")
                        .HasColumnType("int");

                    b.Property<int>("DecimalSeparator")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupingFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISOCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThousandSeparator")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.CurrencyConversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyConversions");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.CustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerType")
                        .HasColumnType("int");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CustomFields");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.CustomFieldListValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomFieldId")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldId");

                    b.ToTable("CustomFieldListValues");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CCEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ChartofAccountId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrencyBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ChartofAccountId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DefaultAddressId");

                    b.HasIndex("PaymentTermId");

                    b.ToTable("Entities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Entity");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.EntityAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("EntityId");

                    b.ToTable("EntityAddresses");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.FOB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FOBs");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdjustmentAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("AmountInclusiveOfTax")
                        .HasColumnType("bit");

                    b.Property<int?>("AssestAccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("AverageCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BackOrdered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ExpenseAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<int?>("IncomeAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSubItem")
                        .HasColumnType("bit");

                    b.Property<bool>("ItemIsPurchased")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OnHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OnOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ParentItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PurchaseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseTaxId")
                        .HasColumnType("int");

                    b.Property<bool>("RateIsPercent")
                        .HasColumnType("bit");

                    b.Property<string>("SalesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesTaxId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapAccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("StandardCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UOMId")
                        .HasColumnType("int");

                    b.Property<string>("UPC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ParentItemId");

                    b.HasIndex("PurchaseTaxId");

                    b.HasIndex("SalesTaxId");

                    b.HasIndex("UOMId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.JournalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CostcenterId")
                        .HasColumnType("int");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrencyAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExcangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("JournalLine")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Posted")
                        .HasColumnType("bit");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransactionDetalId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostcenterId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EntityId");

                    b.HasIndex("ItemId");

                    b.HasIndex("TaxId");

                    b.HasIndex("TransactionDetalId");

                    b.HasIndex("TransactionId");

                    b.ToTable("JournalDetails");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.PaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BankBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreditCardExpiryMonth")
                        .HasColumnType("int");

                    b.Property<int>("CreditCardExpiryYear")
                        .HasColumnType("int");

                    b.Property<string>("CreditCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankBranchId");

                    b.HasIndex("BankId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentMethodType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.PaymentTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DateDriven")
                        .HasColumnType("bit");

                    b.Property<string>("Descripion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountIfPaidBefore")
                        .HasColumnType("int");

                    b.Property<int>("DiscountIfPaidWithin")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DueNextMonthIfIssued")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<int>("NetDueBefore")
                        .HasColumnType("int");

                    b.Property<int>("NetDueIn")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentTerms");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.PricingRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PricingRules");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjectTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProjectTypeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.SalesRep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("SalesReps");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.ShippingMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ShippingMethods");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CollectedOnPurchases")
                        .HasColumnType("bit");

                    b.Property<bool>("CollectedOnSales")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchaseRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("PurchaseTaxIsReclaimable")
                        .HasColumnType("bit");

                    b.Property<decimal>("SalesRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TaxAgencyId")
                        .HasColumnType("int");

                    b.Property<bool>("Taxable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TaxAgencyId");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExcangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Transactions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Transaction");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.TransactionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CostcenterId")
                        .HasColumnType("int");

                    b.Property<string>("Custom1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Custom2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TaxItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<int?>("UOMId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CostcenterId");

                    b.HasIndex("ItemId");

                    b.HasIndex("TaxItemId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UOMId");

                    b.ToTable("TransactionDetails");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.UOMConversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Multiply")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UoMFromId")
                        .HasColumnType("int");

                    b.Property<int>("UoMToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UoMFromId");

                    b.HasIndex("UoMToId");

                    b.ToTable("UOMConversions");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.UnitsofMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("bit");

                    b.Property<int>("UOMType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UnitsofMeasures");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DefaultBinId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DefaultBinId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Costcenter", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Category");

                    b.HasDiscriminator().HasValue("Costcenter");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.CustomerType", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Category");

                    b.HasDiscriminator().HasValue("CustomerType");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.ItemCategory", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Category");

                    b.HasDiscriminator().HasValue("ItemCategory");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.ProjectType", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Category");

                    b.HasDiscriminator().HasValue("ProjectType");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.SupplierType", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Category");

                    b.HasDiscriminator().HasValue("SupplierType");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Customer", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Entity");

                    b.Property<int?>("SalesRepId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasIndex("SalesRepId");

                    b.HasIndex("TaxId");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.OtherName", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Entity");

                    b.HasDiscriminator().HasValue("OtherName");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Supplier", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Entity");

                    b.HasDiscriminator().HasValue("Supplier");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.TaxAgency", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Entity");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("PurchasesAccountId")
                        .HasColumnType("int");

                    b.Property<int>("ReportingFrequency")
                        .HasColumnType("int");

                    b.Property<int>("ReportingMethod")
                        .HasColumnType("int");

                    b.Property<int?>("SalesAccountId")
                        .HasColumnType("int");

                    b.Property<string>("TaxRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("PurchasesAccountId");

                    b.HasIndex("SalesAccountId");

                    b.HasDiscriminator().HasValue("TaxAgency");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Invoice", b =>
                {
                    b.HasBaseType("HoneyBee.ApplicationCore.Entities.Transaction");

                    b.Property<int?>("PaymentTermId")
                        .HasColumnType("int");

                    b.HasIndex("PaymentTermId");

                    b.HasDiscriminator().HasValue("Invoice");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Bank", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.BankBranch", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Bank", "Bank")
                        .WithMany("BankBranches")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Bin", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Warehouse", "Warehouse")
                        .WithMany("Bins")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Category", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.ChartofAccount", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.BankBranch", "BankBranch")
                        .WithMany()
                        .HasForeignKey("BankBranchId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoneyBee.ApplicationCore.Entities.ChartofAccount", "ParentAccount")
                        .WithMany("ChildChartofAccounts")
                        .HasForeignKey("ParentAccountId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Currency", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.CurrencyConversion", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Currency", "Currency")
                        .WithMany("CurrencyConversions")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.CustomFieldListValue", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.CustomField", "CustomField")
                        .WithMany("CustomFieldListValues")
                        .HasForeignKey("CustomFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Entity", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.ChartofAccount", "ChartofAccount")
                        .WithMany()
                        .HasForeignKey("ChartofAccountId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Address", "DefaultAddress")
                        .WithMany()
                        .HasForeignKey("DefaultAddressId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.PaymentTerm", "PaymentTerm")
                        .WithMany()
                        .HasForeignKey("PaymentTermId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.EntityAddress", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Address", "Address")
                        .WithMany("EntityAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Entity", "Entity")
                        .WithMany("EntityAddresses")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Item", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Item", "ParentItem")
                        .WithMany("ChildItems")
                        .HasForeignKey("ParentItemId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Tax", "PurchaseTax")
                        .WithMany()
                        .HasForeignKey("PurchaseTaxId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Tax", "SalesTax")
                        .WithMany()
                        .HasForeignKey("SalesTaxId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.UnitsofMeasure", "UnitsofMeasure")
                        .WithMany()
                        .HasForeignKey("UOMId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.JournalDetail", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.ChartofAccount", "ChartofAccount")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Costcenter", "Costcenter")
                        .WithMany()
                        .HasForeignKey("CostcenterId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.TransactionDetail", "TransactionDetail")
                        .WithMany("JournalDetails")
                        .HasForeignKey("TransactionDetalId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Transaction", "Transaction")
                        .WithMany("JournalDetails")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.PaymentDetail", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.BankBranch", "BankBranch")
                        .WithMany()
                        .HasForeignKey("BankBranchId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Project", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoneyBee.ApplicationCore.Entities.ProjectType", "ProjectType")
                        .WithMany()
                        .HasForeignKey("ProjectTypeId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.SalesRep", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Tax", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.TaxAgency", "TaxAgency")
                        .WithMany("Taxes")
                        .HasForeignKey("TaxAgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Transaction", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.TransactionDetail", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Costcenter", "Costcenter")
                        .WithMany()
                        .HasForeignKey("CostcenterId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxItemId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Transaction", "Transaction")
                        .WithMany("TransactionDetails")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoneyBee.ApplicationCore.Entities.UnitsofMeasure", "UnitsofMeasure")
                        .WithMany()
                        .HasForeignKey("UOMId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.UOMConversion", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.UnitsofMeasure", "UOMFrom")
                        .WithMany("UOMConversionsFrom")
                        .HasForeignKey("UoMFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoneyBee.ApplicationCore.Entities.UnitsofMeasure", "UOMTo")
                        .WithMany("UOMConversionsTo")
                        .HasForeignKey("UoMToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Warehouse", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.Bin", "DefaulftBin")
                        .WithMany()
                        .HasForeignKey("DefaultBinId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Customer", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.SalesRep", "SalesRep")
                        .WithMany()
                        .HasForeignKey("SalesRepId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.TaxAgency", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.ChartofAccount", "PurchasesAccount")
                        .WithMany()
                        .HasForeignKey("PurchasesAccountId");

                    b.HasOne("HoneyBee.ApplicationCore.Entities.ChartofAccount", "SalesAccount")
                        .WithMany()
                        .HasForeignKey("SalesAccountId");
                });

            modelBuilder.Entity("HoneyBee.ApplicationCore.Entities.Invoice", b =>
                {
                    b.HasOne("HoneyBee.ApplicationCore.Entities.PaymentTerm", "PaymentTerm")
                        .WithMany()
                        .HasForeignKey("PaymentTermId");
                });
#pragma warning restore 612, 618
        }
    }
}
